{"version":3,"sources":["../../../../../../../../../../../../execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/plugins/expression/core/src/index.ts"],"sourcesContent":["import type {\n  Player,\n  PlayerPlugin,\n  ExpressionHandler,\n} from \"@player-ui/player\";\n\nexport type ExpressionMap = Map<string, ExpressionHandler<any[], any>>;\n\n/**\n * The ExpressionPlugin is an easy way to inject custom expression handlers into the running player instance.\n * Simply supply a map of function name to handler, and the expressions will be available inside of the Content.\n *\n * Any subsequent expressions registered with the same name will override previous handlers.\n */\nexport class ExpressionPlugin implements PlayerPlugin {\n  name = \"ExpressionPlugin\";\n  private expressions: ExpressionMap;\n\n  constructor(expressionMap: ExpressionMap) {\n    this.expressions = expressionMap;\n  }\n\n  apply(player: Player) {\n    player.hooks.expressionEvaluator.tap(this.name, (expEvaluator) => {\n      this.expressions.forEach((handler, name) => {\n        expEvaluator.addExpressionFunction(name, handler);\n      });\n    });\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAcO,MAAM,mBAAN,MAA+C;AAAA,IAIpD,YAAY,eAA8B;AAH1C,kBAAO;AAIL,WAAK,cAAc;AAAA,IACrB;AAAA,IAEA,MAAM,QAAgB;AACpB,aAAO,MAAM,oBAAoB,IAAI,KAAK,MAAM,CAAC,iBAAiB;AAChE,aAAK,YAAY,QAAQ,CAAC,SAAS,SAAS;AAC1C,uBAAa,sBAAsB,MAAM,OAAO;AAAA,QAClD,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAAA,EACF;","names":[]}